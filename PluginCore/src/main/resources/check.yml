antibot:
  enabled: true
  # Unused in this check
  cancel_vl: -1
  disable_worlds: []
  # Unused in this check
  action: {}
antivelocity:
  enabled: true
  cancel_vl: 1
  disable_worlds: []
  typeA:
    enabled: true
  action:
    5:
      - 'horizon notify %player% might be using AntiVelocity'
    8:
      - 'horizon notify %player% is kicked for using AntiVelocity'
      - 'horizon kick %player% Did not take knock back.'
badpacket:
  enabled: true
  cancel_vl: 0
  disable_worlds: []
  typeA:
    enabled: true
  typeB:
    enabled: true
  typeC:
    enabled: true
  typeD:
    enabled: true
  action:
    5:
      - 'horizon notify %player% might be sending bad packets'
    15:
      - 'horizon notify %player% is kicked for sending bad packets'
      - 'horizon kick %player% Invalid packets.'
groundspoof:
  enabled: true
  cancel_vl: 0
  disable_worlds: []
  typeA:
    enabled: true
  action:
    16:
      - 'horizon notify %player% might be spoofing on ground'
    25:
      - 'horizon notify %player% is kicked for spoofing on ground'
      - 'horizon kick %player% Spoof on ground.'
hitbox:
  enabled: true
  cancel_vl: 1
  disable_worlds: []
  typeA:
    enabled: true
    max_reach: 3.1
  action:
    8:
      - 'horizon notify %player% might be using HitBox'
    15:
      - 'horizon notify %player% is kicked for using HitBox'
      - 'horizon kick %player% Did not hit hitbox.'
healthtag:
  enabled: true
  # Unused in this check
  cancel_vl: 0
  disable_worlds: []
  # Unused in this check
  action: {}
invalidmotion:
  enabled: true
  cancel_vl: 1
  disable_worlds: []
  predict:
    enabled: true
    tolerance: 0.001
    # Should Horizon only set back but not add any violation levels
    # if player tries to wall-jump?
    wall_jump: true
  step:
    enabled: true
  action:
    20:
      - 'horizon notify %player% might be moving unexpectedly'
    40:
      - 'horizon notify %player% is kicked for moving unexpectedly'
      - 'horizon kick %player% Moving unexpectedly.'
inventory:
  enabled: true
  cancel_vl: 0
  disable_worlds: []
  typeA:
    enabled: true
    checkRotation: true
    checkPosition: true
    checkAction: true
    checkHit: true
  action:
    8:
      - 'horizon notify %player% might be using inventory related cheats'
    16:
      - 'horizon notify %player% is kicked for using inventory related hacks'
      - 'horizon kick %player% Impossible inventory action'
killaura:
  enabled: true
  cancel_vl: 0
  disable_worlds: []
  order:
    enabled: true
  superkb:
    enabled: true
  gcd:
    enabled: true
    # If strict mode is disabled, gcd check will only run if someone
    # failed other aura checks.
    strict: false
  direction:
    enabled: true
  interact_autoblock:
    enabled: true
  normal_autoblock:
    enabled: true
  action:
    10:
      - 'horizon notify %player% might be using KillAura, start checking the player with bot.'
      - 'horizon bot %player% 60'
    20:
      - 'horizon notify %player% is kicked for using KillAura'
      - 'horizon kick %player% Unfair advantages.'
killaurabot:
  enabled: true
  # Unused
  cancel_vl: -1
  disable_worlds: []
  command_only: true
  # How long should the update interval of the bot be?
  # Measured in ticks
  update_interval: 2
  xz_distance: 3.3
  y_distance: 2.0
  offset:
    x: 0.5
    y: 0.8
    z: 0.5
  show_damage: true
  show_swing: true
  show_armor: true
  show_on_tab: true
  realistic_ping: true
  realistic_name: true
  respawn_interval: 180
  action:
    10:
      - 'horizon notify %player% hit the bot 10 times'
    20:
      - 'horizon notify %player% is kicked for hitting bot'
      - 'horizon kick %player% Unfair advantages.'
noswing:
  enabled: true
  cancel_vl: 0
  disable_worlds: []
  typeA:
    enabled: true
  action:
    3:
      - 'horizon notify %player% might be using NoSwing'
    10:
      - 'horizon notify %player% is kicked for using NoSwing'
      - 'horizon kick %player% Did not swing arm.'
scaffold:
  enabled: true
  cancel_vl: 0
  disable_worlds: []
  typeA:
    enabled: true
  typeB:
    enabled: true
    max_angle: 90.0
  typeC:
    enabled: true
  typeD:
    enabled: true
  action:
    12:
      - 'horizon notify %player% might be using Scaffold'
    22:
      - 'horizon notify %player% is kicked for using Scaffold'
      - 'horizon kick %player% Unfair advantages.'
speed:
  enabled: true
  cancel_vl: 1
  disable_worlds: []
  predict:
    enabled: true
    tolerance: 0.08
  noslow:
    enabled: true
    # How many violation levels will be added if player failed Packet-NoSlow?
    # If you set it to 0, the check will not add any violation levels.
    packet_vl: 8
    # How many violation levels will be added if player failed Predict-NoSlow?
    # If you set it to -1, dynamic violation addition will be enabled.
    # If you set it to 0, the check will not add any violation levels.
    move_vl: -1
    # Should Horizon always cancel player's behavior when the player failed this check?
    always_cancel: false
  sprint:
    enabled: true
  strafe:
    enabled: true
    threshold: 3
  action:
    15:
      - 'horizon notify %player% might be moving faster than legit'
    30:
      - 'horizon notify %player% is kicked for moving too fast'
      - 'horizon kick %player% Moving too fast.'
timer:
  enabled: true
  cancel_vl: 1
  disable_worlds: []
  typeA:
    enabled: true
    allow_ms: 50
  action:
    25:
      - 'horizon notify %player% might be sending too many move packets'
    40:
      - 'horizon notify %player% is kicked for sending too many move packets'
      - 'horizon kick %player% Too many packets.'